plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}


configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}
dependencies {
    implementation project(':api')
    implementation project(':common')
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation 'com.amazonaws:aws-java-sdk:1.11.133'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation 'com.h2database:h2'
    //testCompile 'org.dbunit:dbunit:2.5.4'
    //testCompile 'com.github.springtestdbunit:spring-test-dbunit:1.3.0'
}

test {
    useJUnitPlatform()
}